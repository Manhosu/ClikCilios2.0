require('dotenv').config({ path: '.env.local' });
const { createClient } = require('@supabase/supabase-js');

const supabaseUrl = process.env.VITE_SUPABASE_URL;
const supabaseKey = process.env.VITE_SUPABASE_ANON_KEY;

if (!supabaseUrl || !supabaseKey) {
  console.error('‚ùå Vari√°veis de ambiente n√£o configuradas');
  process.exit(1);
}

const supabase = createClient(supabaseUrl, supabaseKey);

async function inserirUsuarios() {
  console.log('üöÄ Inserindo usu√°rios pr√©-criados...');
  console.log('URL:', supabaseUrl);
  console.log('');
  
  try {
    // Verificar se j√° existem usu√°rios
    const { data: existingUsers, error: checkError } = await supabase
      .from('pre_users')
      .select('username')
      .limit(5);
    
    if (checkError) {
      console.log('‚ùå Erro ao verificar usu√°rios existentes:', checkError);
      return;
    }
    
    console.log('‚úÖ Tabela acess√≠vel!');
    console.log('üìä Usu√°rios existentes encontrados:', existingUsers?.length || 0);
    
    if (existingUsers && existingUsers.length > 0) {
      console.log('‚ö†Ô∏è J√° existem usu√°rios na tabela:');
      existingUsers.forEach(user => console.log('  -', user.username));
      console.log('');
    }
    
    // Criar lista de usu√°rios para inserir
    const usuarios = [];
    for (let i = 1; i <= 20; i++) {
      const username = `user${i.toString().padStart(4, '0')}`;
      const email = `${username}@ciliosclick.com`;
      usuarios.push({
        username: username,
        email: email,
        status: 'available'
      });
    }
    
    console.log('üìù Inserindo 20 usu√°rios...');
    
    // Inserir usu√°rios usando upsert para evitar duplicatas
    const { data: insertedUsers, error: insertError } = await supabase
      .from('pre_users')
      .upsert(usuarios, {
        onConflict: 'username',
        ignoreDuplicates: false
      })
      .select();
    
    if (insertError) {
      console.log('‚ùå Erro ao inserir usu√°rios:', insertError);
      return;
    }
    
    console.log(`‚úÖ ${insertedUsers?.length || 0} usu√°rios processados com sucesso!`);
    
    // Verificar total final
    const { count, error: countError } = await supabase
      .from('pre_users')
      .select('*', { count: 'exact', head: true });
    
    if (!countError) {
      console.log(`üìä Total de usu√°rios na tabela: ${count}`);
    }
    
    // Mostrar alguns usu√°rios como exemplo
    const { data: sampleUsers, error: sampleError } = await supabase
      .from('pre_users')
      .select('username, email, status')
      .limit(5);
    
    if (!sampleError && sampleUsers) {
      console.log('\nüìã Exemplos de usu√°rios na tabela:');
      sampleUsers.forEach(user => {
        console.log(`  ‚Ä¢ ${user.username} <${user.email}> (${user.status})`);
      });
    }
    
    console.log('\nüéâ Popula√ß√£o de usu√°rios conclu√≠da!');
    
  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

inserirUsuarios();